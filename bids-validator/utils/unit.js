const roots = [
  'metre',
  'm',
  'kilogram',
  'kg',
  'second',
  's',
  'ampere',
  'A',
  'kelvin',
  'K',
  'mole',
  'mol',
  'candela',
  'cd',
  'radian',
  'rad',
  'steradian',
  'sr',
  'hertz',
  'Hz',
  'newton',
  'N',
  'pascal',
  'Pa',
  'joule',
  'J',
  'watt',
  'W',
  'coulomb',
  'C',
  'volt',
  'V',
  'farad',
  'F',
  'ohm',
  'Ω',
  'siemens',
  'S',
  'weber',
  'Wb',
  'tesla',
  'T',
  'henry',
  'H',
  'degree',
  'Celsius',
  'lumen',
  'lm',
  'lux',
  'lx',
  'becquerel',
  'Bq',
  'gray',
  'Gy',
  'sievert',
  'Sv',
  'katal',
  'kat',
]
const prefixes = [
  // multiples
  'deca',
  'da',
  'hecto',
  'h',
  'kilo',
  'k',
  'mega',
  'M',
  'giga',
  'G',
  'tera',
  'T',
  'peta',
  'P',
  'exa',
  'E',
  'zetta',
  'Z',
  'yotta',
  'Y',
  // sub-multiples
  'deci',
  'd',
  'centi',
  'c',
  'milli',
  'm',
  'micro',
  'µ',
  'nano',
  'n',
  'pico',
  'p',
  'femto',
  'f',
  'atto',
  'a',
  'zepto',
  'z',
  'yocto',
  'y',
]

const prefix = `^(${prefixes.join('|')})?`
const prefixPattern = new RegExp(prefix)
const root = `(${roots.join('|')})$`
const rootPattern = new RegExp(root)
const validSIPattern = new RegExp(prefix + root)

const validate = unit => {
  const isValid = validSIPattern.test(unit)
  return {
    isValid,
    validPrefix: isValid || prefixPattern.test(unit),
    validRoot: isValid || rootPattern.test(unit),
  }
}

export { roots, prefixes, validate }
export default {
  roots,
  prefixes,
  validate,
}
